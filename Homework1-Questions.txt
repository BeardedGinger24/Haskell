4 pts) Write a recursive method to compute m(i) = 1 + 1/2 + 1/3, ... + 1/i, where i is an Int

Note: you can use fromIntegral for operations involving both ints and floats for any of the problems.

4 pts) Write a recursive method to compute m(i) = 1/2, + 2/3, ... + i/(i + 1), where i is an Int

4 pts) Using recursion, implement a method that removes the max element from a list of Ints, or if there are duplicates of the max element, just remove one of them. E.g., [1, 2, 4, 4, 3] should become [1, 2, 4, 3]. Also, assume the list is unsorted. Do not sort the list.

8 pts) Implement a sorting algorithm that finds the max, puts it at the end of the list, then recursively sorts the remainder of the list. You can create/use any helper functions you need, provide that you wrote it yourself, or it's built into Haskell.